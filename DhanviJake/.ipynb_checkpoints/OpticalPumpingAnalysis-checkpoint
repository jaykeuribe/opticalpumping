{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7284c00e-27d1-4691-ad26-e5a662c31ba0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "import sys\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib as mpl\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e5614825-f2a4-45e9-a8c4-c67e3bc1142a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\jakeuribe\\DhanviJake\n"
     ]
    }
   ],
   "source": [
    "mins = []\n",
    "maxs = []\n",
    "cwd = os.getcwd()\n",
    "print(cwd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "id": "92d9cc8a-64b8-4329-b054-c29d83953598",
   "metadata": {},
   "outputs": [],
   "source": [
    "def E(delta_W, I, x, y, mf, pm = \"+\"):\n",
    "    c_1 = delta_W/(2*(2*I+1))\n",
    "    c_2 = y * (delta_W/2)*(1+(4*mf)/(2*(2*I+1)))\n",
    "    if pm == \"+\":\n",
    "        return c_1 + c_2\n",
    "    if pm == \"-\":\n",
    "        return c_1 - c_2\n",
    "def delta_E(delta_W, I, x, y, mf, mf_prime, pm = \"+\"):\n",
    "    E = E(delta_W, I, x, y, mf, pm = pm)\n",
    "    E_prime = E(delta_W, I, x, y, mf_prime, pm = pm)\n",
    "    return (E - E_prime)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "903ad35b-138e-402c-b56a-d534ee3f6461",
   "metadata": {},
   "outputs": [],
   "source": [
    "def data_as_array(folder, csv_num, scale = 1):\n",
    "    with open(f'./Dataset{folder}/TEK000{csv_num}.csv', newline='') as csvfile:\n",
    "        reader = csv.DictReader(csvfile)\n",
    "        data = {}\n",
    "        for row in reader:\n",
    "            row = list(row.values())\n",
    "            k,v = row[0],row[1]\n",
    "            data[k] = v\n",
    "            time = np.array(list(data.keys()))\n",
    "    time = np.array(list(data.keys()))\n",
    "    y = np.array(list(data.values()))\n",
    "    \n",
    "    time = np.array(list(map(float, time)))\n",
    "    y = np.array(list(map(float, y)))*scale\n",
    "\n",
    "    return y, time\n",
    "\n",
    "def convert_v_to_f(data, start, end):\n",
    "    v_max = np.max(data)\n",
    "    v_min = np.min(data)\n",
    "\n",
    "    frequency = start + (((end-start)/(v_max-v_min))*data)\n",
    "\n",
    "    return frequency"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7f6d6916-cef0-4aaa-bb65-e6b04cf76e3c",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_1, t_1 = data_as_array(1,14, scale = 0.5e6)\n",
    "f_1, t_1 = data_as_array(1,13,)\n",
    "\n",
    "y_2, t_2 = data_as_array(2,18, scale = 0.5e6)\n",
    "f_2, t_2 = data_as_array(2,17,)\n",
    "\n",
    "y_3, t_3 = data_as_array(3, 20, scale = 0.5e6)\n",
    "f_3, t_3 = data_as_array(3, 19,)\n",
    "\n",
    "y_4, t_4 = data_as_array(4, 22, scale = 0.5e6)\n",
    "f_4, t_4 = data_as_array(4, 21,)\n",
    "\n",
    "y_5, t_5 = data_as_array(5, 24, scale = 0.5e6)\n",
    "f_5, t_5 = data_as_array(5, 23,)\n",
    "\n",
    "#opposite order because swapped\n",
    "y_6, t_6 = data_as_array(6, 25, scale = 0.5e6)\n",
    "f_6, t_6 = data_as_array(6, 26,)\n",
    "\n",
    "#y_7, t_7 = data_as_array(7, 22, scale = 0.5e6)\n",
    "#f_7, t_7 = data_as_array(7, 21,)\n",
    "\n",
    "f_1 = convert_v_to_f(f_1,1.0,0.5e6)\n",
    "f_2 = convert_v_to_f(f_2,0.5e6, 1e6)\n",
    "f_3 = convert_v_to_f(f_3,1e6, 1.5e6)\n",
    "f_4 = convert_v_to_f(f_4,1.5e6, 2e6)\n",
    "f_5 = convert_v_to_f(f_5,2e6, 2.5e6)\n",
    "f_6 = convert_v_to_f(f_6,2.5e6, 3e6)\n",
    "\n",
    "f = np.append(f_1,f_2)\n",
    "f = np.append(f, f_3)\n",
    "f = np.append(f, f_4)\n",
    "f = np.append(f, f_5)\n",
    "f = np.append(f, f_6)\n",
    "\n",
    "y = np.append(y_1,y_2)\n",
    "y = np.append(y,y_3)\n",
    "y = np.append(y,y_4)\n",
    "y = np.append(y,y_5)\n",
    "y = np.append(y,y_6)\n",
    "#plt.plot(t1,abs(y1),)\n",
    "plt.figure(figsize=(10,6))\n",
    "plt.scatter(f_6,y_6, s = 4)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "1f01001f-aa3d-4f69-9c9e-2bdee868ca6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x234249dc110>"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "plt.scatter(f,y*-1, s = 3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "d76e5d0e-d0d4-4c80-995c-ea22e82d7a60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x234180f5f50>"
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize=(10,6))\n",
    "plt.scatter(f,corrected, s=1, )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "9057997d-6ecf-4c5a-bbc5-729793aedf9f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[-0.02624 -0.02608 -0.02592 ...  0.2931   0.2933   0.2934 ]\n"
     ]
    }
   ],
   "source": [
    "print(y_3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ded26791-8819-4185-9093-9875fdeea855",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['-2.640e-02', '-2.624e-02', '-2.608e-02', '-2.592e-02', '-2.576e-02', '-2.560e-02', '-2.544e-02', '-2.528e-02', '-2.512e-02', '-2.496e-02', '-2.480e-02', '-2.464e-02', '-2.448e-02', '-2.432e-02', '-2.416e-02', '-2.400e-02', '-2.384e-02', '-2.368e-02', '-2.352e-02', '-2.336e-02', '-2.320e-02', '-2.304e-02', '-2.288e-02', '-2.272e-02', '-2.256e-02', '-2.240e-02', '-2.224e-02', '-2.208e-02', '-2.192e-02', '-2.176e-02', '-2.160e-02', '-2.144e-02', '-2.128e-02', '-2.112e-02', '-2.096e-02', '-2.080e-02', '-2.064e-02', '-2.048e-02', '-2.032e-02', '-2.016e-02', '-2.000e-02', '-1.984e-02', '-1.968e-02', '-1.952e-02', '-1.936e-02', '-1.920e-02', '-1.904e-02', '-1.888e-02', '-1.872e-02', '-1.856e-02', '-1.840e-02', '-1.824e-02', '-1.808e-02', '-1.792e-02', '-1.776e-02', '-1.760e-02', '-1.744e-02', '-1.728e-02', '-1.712e-02', '-1.696e-02', '-1.680e-02', '-1.664e-02', '-1.648e-02', '-1.632e-02', '-1.616e-02', '-1.600e-02', '-1.584e-02', '-1.568e-02', '-1.552e-02', '-1.536e-02', '-1.520e-02', '-1.504e-02', '-1.488e-02', '-1.472e-02', '-1.456e-02', '-1.440e-02', '-1.424e-02', '-1.408e-02', '-1.392e-02', '-1.376e-02', '-1.360e-02', '-1.344e-02', '-1.328e-02', '-1.312e-02', '-1.296e-02', '-1.280e-02', '-1.264e-02', '-1.248e-02', '-1.232e-02', '-1.216e-02', '-1.200e-02', '-1.184e-02', '-1.168e-02', '-1.152e-02', '-1.136e-02', '-1.120e-02', '-1.104e-02', '-1.088e-02', '-1.072e-02', '-1.056e-02', '-1.040e-02', '-1.024e-02', '-1.008e-02', '-9.920e-03', '-9.760e-03', '-9.600e-03', '-9.440e-03', '-9.280e-03', '-9.120e-03', '-8.960e-03', '-8.800e-03', '-8.640e-03', '-8.480e-03', '-8.320e-03', '-8.160e-03', '-8.000e-03', '-7.840e-03', '-7.680e-03', '-7.520e-03', '-7.360e-03', '-7.200e-03', '-7.040e-03', '-6.880e-03', '-6.720e-03', '-6.560e-03', '-6.400e-03', '-6.240e-03', '-6.080e-03', '-5.920e-03', '-5.760e-03', '-5.600e-03', '-5.440e-03', '-5.280e-03', '-5.120e-03', '-4.960e-03', '-4.800e-03', '-4.640e-03', '-4.480e-03', '-4.320e-03', '-4.160e-03', '-4.000e-03', '-3.840e-03', '-3.680e-03', '-3.520e-03', '-3.360e-03', '-3.200e-03', '-3.040e-03', '-2.880e-03', '-2.720e-03', '-2.560e-03', '-2.400e-03', '-2.240e-03', '-2.080e-03', '-1.920e-03', '-1.760e-03', '-1.600e-03', '-1.440e-03', '-1.280e-03', '-1.120e-03', '-9.600e-04', '-8.000e-04', '-6.400e-04', '-4.800e-04', '-3.200e-04', '-1.600e-04', '1.071e-16', '1.600e-04', '3.200e-04', '4.800e-04', '6.400e-04', '8.000e-04', '9.600e-04', '1.120e-03', '1.280e-03', '1.440e-03', '1.600e-03', '1.760e-03', '1.920e-03', '2.080e-03', '2.240e-03', '2.400e-03', '2.560e-03', '2.720e-03', '2.880e-03', '3.040e-03', '3.200e-03', '3.360e-03', '3.520e-03', '3.680e-03', '3.840e-03', '4.000e-03', '4.160e-03', '4.320e-03', '4.480e-03', '4.640e-03', '4.800e-03', '4.960e-03', '5.120e-03', '5.280e-03', '5.440e-03', '5.600e-03', '5.760e-03', '5.920e-03', '6.080e-03', '6.240e-03', '6.400e-03', '6.560e-03', '6.720e-03', '6.880e-03', '7.040e-03', '7.200e-03', '7.360e-03', '7.520e-03', '7.680e-03', '7.840e-03', '8.000e-03', '8.160e-03', '8.320e-03', '8.480e-03', '8.640e-03', '8.800e-03', '8.960e-03', '9.120e-03', '9.280e-03', '9.440e-03', '9.600e-03', '9.760e-03', '9.920e-03', '1.008e-02', '1.024e-02', '1.040e-02', '1.056e-02', '1.072e-02', '1.088e-02', '1.104e-02', '1.120e-02', '1.136e-02', '1.152e-02', '1.168e-02', '1.184e-02', '1.200e-02', '1.216e-02', '1.232e-02', '1.248e-02', '1.264e-02', '1.280e-02', '1.296e-02', '1.312e-02', '1.328e-02', '1.344e-02', '1.360e-02', '1.376e-02', '1.392e-02', '1.408e-02', '1.424e-02', '1.440e-02', '1.456e-02', '1.472e-02', '1.488e-02', '1.504e-02', '1.520e-02', '1.536e-02', '1.552e-02', '1.568e-02', '1.584e-02', '1.600e-02', '1.616e-02', '1.632e-02', '1.648e-02', '1.664e-02', '1.680e-02', '1.696e-02', '1.712e-02', '1.728e-02', '1.744e-02', '1.760e-02', '1.776e-02', '1.792e-02', '1.808e-02', '1.824e-02', '1.840e-02', '1.856e-02', '1.872e-02', '1.888e-02', '1.904e-02', '1.920e-02', '1.936e-02', '1.952e-02', '1.968e-02', '1.984e-02', '2.000e-02', '2.016e-02', '2.032e-02', '2.048e-02', '2.064e-02', '2.080e-02', '2.096e-02', '2.112e-02', '2.128e-02', '2.144e-02', '2.160e-02', '2.176e-02', '2.192e-02', '2.208e-02', '2.224e-02', '2.240e-02', '2.256e-02', '2.272e-02', '2.288e-02', '2.304e-02', '2.320e-02', '2.336e-02', '2.352e-02', '2.368e-02', '2.384e-02', '2.400e-02', '2.416e-02', '2.432e-02', '2.448e-02', '2.464e-02', '2.480e-02', '2.496e-02', '2.512e-02', '2.528e-02', '2.544e-02', '2.560e-02', '2.576e-02', '2.592e-02', '2.608e-02', '2.624e-02', '2.640e-02', '2.656e-02', '2.672e-02', '2.688e-02', '2.704e-02', '2.720e-02', '2.736e-02', '2.752e-02', '2.768e-02', '2.784e-02', '2.800e-02', '2.816e-02', '2.832e-02', '2.848e-02', '2.864e-02', '2.880e-02', '2.896e-02', '2.912e-02', '2.928e-02', '2.944e-02', '2.960e-02', '2.976e-02', '2.992e-02', '3.008e-02', '3.024e-02', '3.040e-02', '3.056e-02', '3.072e-02', '3.088e-02', '3.104e-02', '3.120e-02', '3.136e-02', '3.152e-02', '3.168e-02', '3.184e-02', '3.200e-02', '3.216e-02', '3.232e-02', '3.248e-02', '3.264e-02', '3.280e-02', '3.296e-02', '3.312e-02', '3.328e-02', '3.344e-02', '3.360e-02', '3.376e-02', '3.392e-02', '3.408e-02', '3.424e-02', '3.440e-02', '3.456e-02', '3.472e-02', '3.488e-02', '3.504e-02', '3.520e-02', '3.536e-02', '3.552e-02', '3.568e-02', '3.584e-02', '3.600e-02', '3.616e-02', '3.632e-02', '3.648e-02', '3.664e-02', '3.680e-02', '3.696e-02', '3.712e-02', '3.728e-02', '3.744e-02', '3.760e-02', '3.776e-02', '3.792e-02', '3.808e-02', '3.824e-02', '3.840e-02', '3.856e-02', '3.872e-02', '3.888e-02', '3.904e-02', '3.920e-02', '3.936e-02', '3.952e-02', '3.968e-02', '3.984e-02', '4.000e-02', '4.016e-02', '4.032e-02', '4.048e-02', '4.064e-02', '4.080e-02', '4.096e-02', '4.112e-02', '4.128e-02', '4.144e-02', '4.160e-02', '4.176e-02', '4.192e-02', '4.208e-02', '4.224e-02', '4.240e-02', '4.256e-02', '4.272e-02', '4.288e-02', '4.304e-02', '4.320e-02', '4.336e-02', '4.352e-02', '4.368e-02', '4.384e-02', '4.400e-02', '4.416e-02', '4.432e-02', '4.448e-02', '4.464e-02', '4.480e-02', '4.496e-02', '4.512e-02', '4.528e-02', '4.544e-02', '4.560e-02', '4.576e-02', '4.592e-02', '4.608e-02', '4.624e-02', '4.640e-02', '4.656e-02', '4.672e-02', '4.688e-02', '4.704e-02', '4.720e-02', '4.736e-02', '4.752e-02', '4.768e-02', '4.784e-02', '4.800e-02', '4.816e-02', '4.832e-02', '4.848e-02', '4.864e-02', '4.880e-02', '4.896e-02', '4.912e-02', '4.928e-02', '4.944e-02', '4.960e-02', '4.976e-02', '4.992e-02', '5.008e-02', '5.024e-02', '5.040e-02', '5.056e-02', '5.072e-02', '5.088e-02', '5.104e-02', '5.120e-02', '5.136e-02', '5.152e-02', '5.168e-02', '5.184e-02', '5.200e-02', '5.216e-02', '5.232e-02', '5.248e-02', '5.264e-02', '5.280e-02', '5.296e-02', '5.312e-02', '5.328e-02', '5.344e-02', '5.360e-02', '5.376e-02', '5.392e-02', '5.408e-02', '5.424e-02', '5.440e-02', '5.456e-02', '5.472e-02', '5.488e-02', '5.504e-02', '5.520e-02', '5.536e-02', '5.552e-02', '5.568e-02', '5.584e-02', '5.600e-02', '5.616e-02', '5.632e-02', '5.648e-02', '5.664e-02', '5.680e-02', '5.696e-02', '5.712e-02', '5.728e-02', '5.744e-02', '5.760e-02', '5.776e-02', '5.792e-02', '5.808e-02', '5.824e-02', '5.840e-02', '5.856e-02', '5.872e-02', '5.888e-02', '5.904e-02', '5.920e-02', '5.936e-02', '5.952e-02', '5.968e-02', '5.984e-02', '6.000e-02', '6.016e-02', '6.032e-02', '6.048e-02', '6.064e-02', '6.080e-02', '6.096e-02', '6.112e-02', '6.128e-02', '6.144e-02', '6.160e-02', '6.176e-02', '6.192e-02', '6.208e-02', '6.224e-02', '6.240e-02', '6.256e-02', '6.272e-02', '6.288e-02', '6.304e-02', '6.320e-02', '6.336e-02', '6.352e-02', '6.368e-02', '6.384e-02', '6.400e-02', '6.416e-02', '6.432e-02', '6.448e-02', '6.464e-02', '6.480e-02', '6.496e-02', '6.512e-02', '6.528e-02', '6.544e-02', '6.560e-02', '6.576e-02', '6.592e-02', '6.608e-02', '6.624e-02', '6.640e-02', '6.656e-02', '6.672e-02', '6.688e-02', '6.704e-02', '6.720e-02', '6.736e-02', '6.752e-02', '6.768e-02', '6.784e-02', '6.800e-02', '6.816e-02', '6.832e-02', '6.848e-02', '6.864e-02', '6.880e-02', '6.896e-02', '6.912e-02', '6.928e-02', '6.944e-02', '6.960e-02', '6.976e-02', '6.992e-02', '7.008e-02', '7.024e-02', '7.040e-02', '7.056e-02', '7.072e-02', '7.088e-02', '7.104e-02', '7.120e-02', '7.136e-02', '7.152e-02', '7.168e-02', '7.184e-02', '7.200e-02', '7.216e-02', '7.232e-02', '7.248e-02', '7.264e-02', '7.280e-02', '7.296e-02', '7.312e-02', '7.328e-02', '7.344e-02', '7.360e-02', '7.376e-02', '7.392e-02', '7.408e-02', '7.424e-02', '7.440e-02', '7.456e-02', '7.472e-02', '7.488e-02', '7.504e-02', '7.520e-02', '7.536e-02', '7.552e-02', '7.568e-02', '7.584e-02', '7.600e-02', '7.616e-02', '7.632e-02', '7.648e-02', '7.664e-02', '7.680e-02', '7.696e-02', '7.712e-02', '7.728e-02', '7.744e-02', '7.760e-02', '7.776e-02', '7.792e-02', '7.808e-02', '7.824e-02', '7.840e-02', '7.856e-02', '7.872e-02', '7.888e-02', '7.904e-02', '7.920e-02', '7.936e-02', '7.952e-02', '7.968e-02', '7.984e-02', '8.000e-02', '8.016e-02', '8.032e-02', '8.048e-02', '8.064e-02', '8.080e-02', '8.096e-02', '8.112e-02', '8.128e-02', '8.144e-02', '8.160e-02', '8.176e-02', '8.192e-02', '8.208e-02', '8.224e-02', '8.240e-02', '8.256e-02', '8.272e-02', '8.288e-02', '8.304e-02', '8.320e-02', '8.336e-02', '8.352e-02', '8.368e-02', '8.384e-02', '8.400e-02', '8.416e-02', '8.432e-02', '8.448e-02', '8.464e-02', '8.480e-02', '8.496e-02', '8.512e-02', '8.528e-02', '8.544e-02', '8.560e-02', '8.576e-02', '8.592e-02', '8.608e-02', '8.624e-02', '8.640e-02', '8.656e-02', '8.672e-02', '8.688e-02', '8.704e-02', '8.720e-02', '8.736e-02', '8.752e-02', '8.768e-02', '8.784e-02', '8.800e-02', '8.816e-02', '8.832e-02', '8.848e-02', '8.864e-02', '8.880e-02', '8.896e-02', '8.912e-02', '8.928e-02', '8.944e-02', '8.960e-02', '8.976e-02', '8.992e-02', '9.008e-02', '9.024e-02', '9.040e-02', '9.056e-02', '9.072e-02', '9.088e-02', '9.104e-02', '9.120e-02', '9.136e-02', '9.152e-02', '9.168e-02', '9.184e-02', '9.200e-02', '9.216e-02', '9.232e-02', '9.248e-02', '9.264e-02', '9.280e-02', '9.296e-02', '9.312e-02', '9.328e-02', '9.344e-02', '9.360e-02', '9.376e-02', '9.392e-02', '9.408e-02', '9.424e-02', '9.440e-02', '9.456e-02', '9.472e-02', '9.488e-02', '9.504e-02', '9.520e-02', '9.536e-02', '9.552e-02', '9.568e-02', '9.584e-02', '9.600e-02', '9.616e-02', '9.632e-02', '9.648e-02', '9.664e-02', '9.680e-02', '9.696e-02', '9.712e-02', '9.728e-02', '9.744e-02', '9.760e-02', '9.776e-02', '9.792e-02', '9.808e-02', '9.824e-02', '9.840e-02', '9.856e-02', '9.872e-02', '9.888e-02', '9.904e-02', '9.920e-02', '9.936e-02', '9.952e-02', '9.968e-02', '9.984e-02', '1.000e-01', '1.002e-01', '1.003e-01', '1.005e-01', '1.006e-01', '1.008e-01', '1.010e-01', '1.011e-01', '1.013e-01', '1.014e-01', '1.016e-01', '1.018e-01', '1.019e-01', '1.021e-01', '1.022e-01', '1.024e-01', '1.026e-01', '1.027e-01', '1.029e-01', '1.030e-01', '1.032e-01', '1.034e-01', '1.035e-01', '1.037e-01', '1.038e-01', '1.040e-01', '1.042e-01', '1.043e-01', '1.045e-01', '1.046e-01', '1.048e-01', '1.050e-01', '1.051e-01', '1.053e-01', '1.054e-01', '1.056e-01', '1.058e-01', '1.059e-01', '1.061e-01', '1.062e-01', '1.064e-01', '1.066e-01', '1.067e-01', '1.069e-01', '1.070e-01', '1.072e-01', '1.074e-01', '1.075e-01', '1.077e-01', '1.078e-01', '1.080e-01', '1.082e-01', '1.083e-01', '1.085e-01', '1.086e-01', '1.088e-01', '1.090e-01', '1.091e-01', '1.093e-01', '1.094e-01', '1.096e-01', '1.098e-01', '1.099e-01', '1.101e-01', '1.102e-01', '1.104e-01', '1.106e-01', '1.107e-01', '1.109e-01', '1.110e-01', '1.112e-01', '1.114e-01', '1.115e-01', '1.117e-01', '1.118e-01', '1.120e-01', '1.122e-01', '1.123e-01', '1.125e-01', '1.126e-01', '1.128e-01', '1.130e-01', '1.131e-01', '1.133e-01', '1.134e-01', '1.136e-01', '1.138e-01', '1.139e-01', '1.141e-01', '1.142e-01', '1.144e-01', '1.146e-01', '1.147e-01', '1.149e-01', '1.150e-01', '1.152e-01', '1.154e-01', '1.155e-01', '1.157e-01', '1.158e-01', '1.160e-01', '1.162e-01', '1.163e-01', '1.165e-01', '1.166e-01', '1.168e-01', '1.170e-01', '1.171e-01', '1.173e-01', '1.174e-01', '1.176e-01', '1.178e-01', '1.179e-01', '1.181e-01', '1.182e-01', '1.184e-01', '1.186e-01', '1.187e-01', '1.189e-01', '1.190e-01', '1.192e-01', '1.194e-01', '1.195e-01', '1.197e-01', '1.198e-01', '1.200e-01', '1.202e-01', '1.203e-01', '1.205e-01', '1.206e-01', '1.208e-01', '1.210e-01', '1.211e-01', '1.213e-01', '1.214e-01', '1.216e-01', '1.218e-01', '1.219e-01', '1.221e-01', '1.222e-01', '1.224e-01', '1.226e-01', '1.227e-01', '1.229e-01', '1.230e-01', '1.232e-01', '1.234e-01', '1.235e-01', '1.237e-01', '1.238e-01', '1.240e-01', '1.242e-01', '1.243e-01', '1.245e-01', '1.246e-01', '1.248e-01', '1.250e-01', '1.251e-01', '1.253e-01', '1.254e-01', '1.256e-01', '1.258e-01', '1.259e-01', '1.261e-01', '1.262e-01', '1.264e-01', '1.266e-01', '1.267e-01', '1.269e-01', '1.270e-01', '1.272e-01', '1.274e-01', '1.275e-01', '1.277e-01', '1.278e-01', '1.280e-01', '1.282e-01', '1.283e-01', '1.285e-01', '1.286e-01', '1.288e-01', '1.290e-01', '1.291e-01', '1.293e-01', '1.294e-01', '1.296e-01', '1.298e-01', '1.299e-01', '1.301e-01', '1.302e-01', '1.304e-01', '1.306e-01', '1.307e-01', '1.309e-01', '1.310e-01', '1.312e-01', '1.314e-01', '1.315e-01', '1.317e-01', '1.318e-01', '1.320e-01', '1.322e-01', '1.323e-01', '1.325e-01', '1.326e-01', '1.328e-01', '1.330e-01', '1.331e-01', '1.333e-01', '1.334e-01', '1.336e-01', '1.338e-01', '1.339e-01', '1.341e-01', '1.342e-01', '1.344e-01', '1.346e-01', '1.347e-01', '1.349e-01', '1.350e-01', '1.352e-01', '1.354e-01', '1.355e-01', '1.357e-01', '1.358e-01', '1.360e-01', '1.362e-01', '1.363e-01', '1.365e-01', '1.366e-01', '1.368e-01', '1.370e-01', '1.371e-01', '1.373e-01', '1.374e-01', '1.376e-01', '1.378e-01', '1.379e-01', '1.381e-01', '1.382e-01', '1.384e-01', '1.386e-01', '1.387e-01', '1.389e-01', '1.390e-01', '1.392e-01', '1.394e-01', '1.395e-01', '1.397e-01', '1.398e-01', '1.400e-01', '1.402e-01', '1.403e-01', '1.405e-01', '1.406e-01', '1.408e-01', '1.410e-01', '1.411e-01', '1.413e-01', '1.414e-01', '1.416e-01', '1.418e-01', '1.419e-01', '1.421e-01', '1.422e-01', '1.424e-01', '1.426e-01', '1.427e-01', '1.429e-01', '1.430e-01', '1.432e-01', '1.434e-01', '1.435e-01', '1.437e-01', '1.438e-01', '1.440e-01', '1.442e-01', '1.443e-01', '1.445e-01', '1.446e-01', '1.448e-01', '1.450e-01', '1.451e-01', '1.453e-01', '1.454e-01', '1.456e-01', '1.458e-01', '1.459e-01', '1.461e-01', '1.462e-01', '1.464e-01', '1.466e-01', '1.467e-01', '1.469e-01', '1.470e-01', '1.472e-01', '1.474e-01', '1.475e-01', '1.477e-01', '1.478e-01', '1.480e-01', '1.482e-01', '1.483e-01', '1.485e-01', '1.486e-01', '1.488e-01', '1.490e-01', '1.491e-01', '1.493e-01', '1.494e-01', '1.496e-01', '1.498e-01', '1.499e-01', '1.501e-01', '1.502e-01', '1.504e-01', '1.506e-01', '1.507e-01', '1.509e-01', '1.510e-01', '1.512e-01', '1.514e-01', '1.515e-01', '1.517e-01', '1.518e-01', '1.520e-01', '1.522e-01', '1.523e-01', '1.525e-01', '1.526e-01', '1.528e-01', '1.530e-01', '1.531e-01', '1.533e-01', '1.534e-01', '1.536e-01', '1.538e-01', '1.539e-01', '1.541e-01', '1.542e-01', '1.544e-01', '1.546e-01', '1.547e-01', '1.549e-01', '1.550e-01', '1.552e-01', '1.554e-01', '1.555e-01', '1.557e-01', '1.558e-01', '1.560e-01', '1.562e-01', '1.563e-01', '1.565e-01', '1.566e-01', '1.568e-01', '1.570e-01', '1.571e-01', '1.573e-01', '1.574e-01', '1.576e-01', '1.578e-01', '1.579e-01', '1.581e-01', '1.582e-01', '1.584e-01', '1.586e-01', '1.587e-01', '1.589e-01', '1.590e-01', '1.592e-01', '1.594e-01', '1.595e-01', '1.597e-01', '1.598e-01', '1.600e-01', '1.602e-01', '1.603e-01', '1.605e-01', '1.606e-01', '1.608e-01', '1.610e-01', '1.611e-01', '1.613e-01', '1.614e-01', '1.616e-01', '1.618e-01', '1.619e-01', '1.621e-01', '1.622e-01', '1.624e-01', '1.626e-01', '1.627e-01', '1.629e-01', '1.630e-01', '1.632e-01', '1.634e-01', '1.635e-01', '1.637e-01', '1.638e-01', '1.640e-01', '1.642e-01', '1.643e-01', '1.645e-01', '1.646e-01', '1.648e-01', '1.650e-01', '1.651e-01', '1.653e-01', '1.654e-01', '1.656e-01', '1.658e-01', '1.659e-01', '1.661e-01', '1.662e-01', '1.664e-01', '1.666e-01', '1.667e-01', '1.669e-01', '1.670e-01', '1.672e-01', '1.674e-01', '1.675e-01', '1.677e-01', '1.678e-01', '1.680e-01', '1.682e-01', '1.683e-01', '1.685e-01', '1.686e-01', '1.688e-01', '1.690e-01', '1.691e-01', '1.693e-01', '1.694e-01', '1.696e-01', '1.698e-01', '1.699e-01', '1.701e-01', '1.702e-01', '1.704e-01', '1.706e-01', '1.707e-01', '1.709e-01', '1.710e-01', '1.712e-01', '1.714e-01', '1.715e-01', '1.717e-01', '1.718e-01', '1.720e-01', '1.722e-01', '1.723e-01', '1.725e-01', '1.726e-01', '1.728e-01', '1.730e-01', '1.731e-01', '1.733e-01', '1.734e-01', '1.736e-01', '1.738e-01', '1.739e-01', '1.741e-01', '1.742e-01', '1.744e-01', '1.746e-01', '1.747e-01', '1.749e-01', '1.750e-01', '1.752e-01', '1.754e-01', '1.755e-01', '1.757e-01', '1.758e-01', '1.760e-01', '1.762e-01', '1.763e-01', '1.765e-01', '1.766e-01', '1.768e-01', '1.770e-01', '1.771e-01', '1.773e-01', '1.774e-01', '1.776e-01', '1.778e-01', '1.779e-01', '1.781e-01', '1.782e-01', '1.784e-01', '1.786e-01', '1.787e-01', '1.789e-01', '1.790e-01', '1.792e-01', '1.794e-01', '1.795e-01', '1.797e-01', '1.798e-01', '1.800e-01', '1.802e-01', '1.803e-01', '1.805e-01', '1.806e-01', '1.808e-01', '1.810e-01', '1.811e-01', '1.813e-01', '1.814e-01', '1.816e-01', '1.818e-01', '1.819e-01', '1.821e-01', '1.822e-01', '1.824e-01', '1.826e-01', '1.827e-01', '1.829e-01', '1.830e-01', '1.832e-01', '1.834e-01', '1.835e-01', '1.837e-01', '1.838e-01', '1.840e-01', '1.842e-01', '1.843e-01', '1.845e-01', '1.846e-01', '1.848e-01', '1.850e-01', '1.851e-01', '1.853e-01', '1.854e-01', '1.856e-01', '1.858e-01', '1.859e-01', '1.861e-01', '1.862e-01', '1.864e-01', '1.866e-01', '1.867e-01', '1.869e-01', '1.870e-01', '1.872e-01', '1.874e-01', '1.875e-01', '1.877e-01', '1.878e-01', '1.880e-01', '1.882e-01', '1.883e-01', '1.885e-01', '1.886e-01', '1.888e-01', '1.890e-01', '1.891e-01', '1.893e-01', '1.894e-01', '1.896e-01', '1.898e-01', '1.899e-01', '1.901e-01', '1.902e-01', '1.904e-01', '1.906e-01', '1.907e-01', '1.909e-01', '1.910e-01', '1.912e-01', '1.914e-01', '1.915e-01', '1.917e-01', '1.918e-01', '1.920e-01', '1.922e-01', '1.923e-01', '1.925e-01', '1.926e-01', '1.928e-01', '1.930e-01', '1.931e-01', '1.933e-01', '1.934e-01', '1.936e-01', '1.938e-01', '1.939e-01', '1.941e-01', '1.942e-01', '1.944e-01', '1.946e-01', '1.947e-01', '1.949e-01', '1.950e-01', '1.952e-01', '1.954e-01', '1.955e-01', '1.957e-01', '1.958e-01', '1.960e-01', '1.962e-01', '1.963e-01', '1.965e-01', '1.966e-01', '1.968e-01', '1.970e-01', '1.971e-01', '1.973e-01', '1.974e-01', '1.976e-01', '1.978e-01', '1.979e-01', '1.981e-01', '1.982e-01', '1.984e-01', '1.986e-01', '1.987e-01', '1.989e-01', '1.990e-01', '1.992e-01', '1.994e-01', '1.995e-01', '1.997e-01', '1.998e-01', '2.000e-01', '2.002e-01', '2.003e-01', '2.005e-01', '2.006e-01', '2.008e-01', '2.010e-01', '2.011e-01', '2.013e-01', '2.014e-01', '2.016e-01', '2.018e-01', '2.019e-01', '2.021e-01', '2.022e-01', '2.024e-01', '2.026e-01', '2.027e-01', '2.029e-01', '2.030e-01', '2.032e-01', '2.034e-01', '2.035e-01', '2.037e-01', '2.038e-01', '2.040e-01', '2.042e-01', '2.043e-01', '2.045e-01', '2.046e-01', '2.048e-01', '2.050e-01', '2.051e-01', '2.053e-01', '2.054e-01', '2.056e-01', '2.058e-01', '2.059e-01', '2.061e-01', '2.062e-01', '2.064e-01', '2.066e-01', '2.067e-01', '2.069e-01', '2.070e-01', '2.072e-01', '2.074e-01', '2.075e-01', '2.077e-01', '2.078e-01', '2.080e-01', '2.082e-01', '2.083e-01', '2.085e-01', '2.086e-01', '2.088e-01', '2.090e-01', '2.091e-01', '2.093e-01', '2.094e-01', '2.096e-01', '2.098e-01', '2.099e-01', '2.101e-01', '2.102e-01', '2.104e-01', '2.106e-01', '2.107e-01', '2.109e-01', '2.110e-01', '2.112e-01', '2.114e-01', '2.115e-01', '2.117e-01', '2.118e-01', '2.120e-01', '2.122e-01', '2.123e-01', '2.125e-01', '2.126e-01', '2.128e-01', '2.130e-01', '2.131e-01', '2.133e-01', '2.134e-01', '2.136e-01', '2.138e-01', '2.139e-01', '2.141e-01', '2.142e-01', '2.144e-01', '2.146e-01', '2.147e-01', '2.149e-01', '2.150e-01', '2.152e-01', '2.154e-01', '2.155e-01', '2.157e-01', '2.158e-01', '2.160e-01', '2.162e-01', '2.163e-01', '2.165e-01', '2.166e-01', '2.168e-01', '2.170e-01', '2.171e-01', '2.173e-01', '2.174e-01', '2.176e-01', '2.178e-01', '2.179e-01', '2.181e-01', '2.182e-01', '2.184e-01', '2.186e-01', '2.187e-01', '2.189e-01', '2.190e-01', '2.192e-01', '2.194e-01', '2.195e-01', '2.197e-01', '2.198e-01', '2.200e-01', '2.202e-01', '2.203e-01', '2.205e-01', '2.206e-01', '2.208e-01', '2.210e-01', '2.211e-01', '2.213e-01', '2.214e-01', '2.216e-01', '2.218e-01', '2.219e-01', '2.221e-01', '2.222e-01', '2.224e-01', '2.226e-01', '2.227e-01', '2.229e-01', '2.230e-01', '2.232e-01', '2.234e-01', '2.235e-01', '2.237e-01', '2.238e-01', '2.240e-01', '2.242e-01', '2.243e-01', '2.245e-01', '2.246e-01', '2.248e-01', '2.250e-01', '2.251e-01', '2.253e-01', '2.254e-01', '2.256e-01', '2.258e-01', '2.259e-01', '2.261e-01', '2.262e-01', '2.264e-01', '2.266e-01', '2.267e-01', '2.269e-01', '2.270e-01', '2.272e-01', '2.274e-01', '2.275e-01', '2.277e-01', '2.278e-01', '2.280e-01', '2.282e-01', '2.283e-01', '2.285e-01', '2.286e-01', '2.288e-01', '2.290e-01', '2.291e-01', '2.293e-01', '2.294e-01', '2.296e-01', '2.298e-01', '2.299e-01', '2.301e-01', '2.302e-01', '2.304e-01', '2.306e-01', '2.307e-01', '2.309e-01', '2.310e-01', '2.312e-01', '2.314e-01', '2.315e-01', '2.317e-01', '2.318e-01', '2.320e-01', '2.322e-01', '2.323e-01', '2.325e-01', '2.326e-01', '2.328e-01', '2.330e-01', '2.331e-01', '2.333e-01', '2.334e-01', '2.336e-01', '2.338e-01', '2.339e-01', '2.341e-01', '2.342e-01', '2.344e-01', '2.346e-01', '2.347e-01', '2.349e-01', '2.350e-01', '2.352e-01', '2.354e-01', '2.355e-01', '2.357e-01', '2.358e-01', '2.360e-01', '2.362e-01', '2.363e-01', '2.365e-01', '2.366e-01', '2.368e-01', '2.370e-01', '2.371e-01', '2.373e-01', '2.374e-01', '2.376e-01', '2.378e-01', '2.379e-01', '2.381e-01', '2.382e-01', '2.384e-01', '2.386e-01', '2.387e-01', '2.389e-01', '2.390e-01', '2.392e-01', '2.394e-01', '2.395e-01', '2.397e-01', '2.398e-01', '2.400e-01', '2.402e-01', '2.403e-01', '2.405e-01', '2.406e-01', '2.408e-01', '2.410e-01', '2.411e-01', '2.413e-01', '2.414e-01', '2.416e-01', '2.418e-01', '2.419e-01', '2.421e-01', '2.422e-01', '2.424e-01', '2.426e-01', '2.427e-01', '2.429e-01', '2.430e-01', '2.432e-01', '2.434e-01', '2.435e-01', '2.437e-01', '2.438e-01', '2.440e-01', '2.442e-01', '2.443e-01', '2.445e-01', '2.446e-01', '2.448e-01', '2.450e-01', '2.451e-01', '2.453e-01', '2.454e-01', '2.456e-01', '2.458e-01', '2.459e-01', '2.461e-01', '2.462e-01', '2.464e-01', '2.466e-01', '2.467e-01', '2.469e-01', '2.470e-01', '2.472e-01', '2.474e-01', '2.475e-01', '2.477e-01', '2.478e-01', '2.480e-01', '2.482e-01', '2.483e-01', '2.485e-01', '2.486e-01', '2.488e-01', '2.490e-01', '2.491e-01', '2.493e-01', '2.494e-01', '2.496e-01', '2.498e-01', '2.499e-01', '2.501e-01', '2.502e-01', '2.504e-01', '2.506e-01', '2.507e-01', '2.509e-01', '2.510e-01', '2.512e-01', '2.514e-01', '2.515e-01', '2.517e-01', '2.518e-01', '2.520e-01', '2.522e-01', '2.523e-01', '2.525e-01', '2.526e-01', '2.528e-01', '2.530e-01', '2.531e-01', '2.533e-01', '2.534e-01', '2.536e-01', '2.538e-01', '2.539e-01', '2.541e-01', '2.542e-01', '2.544e-01', '2.546e-01', '2.547e-01', '2.549e-01', '2.550e-01', '2.552e-01', '2.554e-01', '2.555e-01', '2.557e-01', '2.558e-01', '2.560e-01', '2.562e-01', '2.563e-01', '2.565e-01', '2.566e-01', '2.568e-01', '2.570e-01', '2.571e-01', '2.573e-01', '2.574e-01', '2.576e-01', '2.578e-01', '2.579e-01', '2.581e-01', '2.582e-01', '2.584e-01', '2.586e-01', '2.587e-01', '2.589e-01', '2.590e-01', '2.592e-01', '2.594e-01', '2.595e-01', '2.597e-01', '2.598e-01', '2.600e-01', '2.602e-01', '2.603e-01', '2.605e-01', '2.606e-01', '2.608e-01', '2.610e-01', '2.611e-01', '2.613e-01', '2.614e-01', '2.616e-01', '2.618e-01', '2.619e-01', '2.621e-01', '2.622e-01', '2.624e-01', '2.626e-01', '2.627e-01', '2.629e-01', '2.630e-01', '2.632e-01', '2.634e-01', '2.635e-01', '2.637e-01', '2.638e-01', '2.640e-01', '2.642e-01', '2.643e-01', '2.645e-01', '2.646e-01', '2.648e-01', '2.650e-01', '2.651e-01', '2.653e-01', '2.654e-01', '2.656e-01', '2.658e-01', '2.659e-01', '2.661e-01', '2.662e-01', '2.664e-01', '2.666e-01', '2.667e-01', '2.669e-01', '2.670e-01', '2.672e-01', '2.674e-01', '2.675e-01', '2.677e-01', '2.678e-01', '2.680e-01', '2.682e-01', '2.683e-01', '2.685e-01', '2.686e-01', '2.688e-01', '2.690e-01', '2.691e-01', '2.693e-01', '2.694e-01', '2.696e-01', '2.698e-01', '2.699e-01', '2.701e-01', '2.702e-01', '2.704e-01', '2.706e-01', '2.707e-01', '2.709e-01', '2.710e-01', '2.712e-01', '2.714e-01', '2.715e-01', '2.717e-01', '2.718e-01', '2.720e-01', '2.722e-01', '2.723e-01', '2.725e-01', '2.726e-01', '2.728e-01', '2.730e-01', '2.731e-01', '2.733e-01', '2.734e-01', '2.736e-01', '2.738e-01', '2.739e-01', '2.741e-01', '2.742e-01', '2.744e-01', '2.746e-01', '2.747e-01', '2.749e-01', '2.750e-01', '2.752e-01', '2.754e-01', '2.755e-01', '2.757e-01', '2.758e-01', '2.760e-01', '2.762e-01', '2.763e-01', '2.765e-01', '2.766e-01', '2.768e-01', '2.770e-01', '2.771e-01', '2.773e-01', '2.774e-01', '2.776e-01', '2.778e-01', '2.779e-01', '2.781e-01', '2.782e-01', '2.784e-01', '2.786e-01', '2.787e-01', '2.789e-01', '2.790e-01', '2.792e-01', '2.794e-01', '2.795e-01', '2.797e-01', '2.798e-01', '2.800e-01', '2.802e-01', '2.803e-01', '2.805e-01', '2.806e-01', '2.808e-01', '2.810e-01', '2.811e-01', '2.813e-01', '2.814e-01', '2.816e-01', '2.818e-01', '2.819e-01', '2.821e-01', '2.822e-01', '2.824e-01', '2.826e-01', '2.827e-01', '2.829e-01', '2.830e-01', '2.832e-01', '2.834e-01', '2.835e-01', '2.837e-01', '2.838e-01', '2.840e-01', '2.842e-01', '2.843e-01', '2.845e-01', '2.846e-01', '2.848e-01', '2.850e-01', '2.851e-01', '2.853e-01', '2.854e-01', '2.856e-01', '2.858e-01', '2.859e-01', '2.861e-01', '2.862e-01', '2.864e-01', '2.866e-01', '2.867e-01', '2.869e-01', '2.870e-01', '2.872e-01', '2.874e-01', '2.875e-01', '2.877e-01', '2.878e-01', '2.880e-01', '2.882e-01', '2.883e-01', '2.885e-01', '2.886e-01', '2.888e-01', '2.890e-01', '2.891e-01', '2.893e-01', '2.894e-01', '2.896e-01', '2.898e-01', '2.899e-01', '2.901e-01', '2.902e-01', '2.904e-01', '2.906e-01', '2.907e-01', '2.909e-01', '2.910e-01', '2.912e-01', '2.914e-01', '2.915e-01', '2.917e-01', '2.918e-01', '2.920e-01', '2.922e-01', '2.923e-01', '2.925e-01', '2.926e-01', '2.928e-01', '2.930e-01', '2.931e-01', '2.933e-01', '2.934e-01']\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2342b5a31d0>]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error in callback <function flush_figures at 0x000002340C64DA80> (for post_execute), with arguments args (),kwargs {}:\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib_inline\\backend_inline.py:126\u001b[0m, in \u001b[0;36mflush_figures\u001b[1;34m()\u001b[0m\n\u001b[0;32m    123\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m InlineBackend\u001b[38;5;241m.\u001b[39minstance()\u001b[38;5;241m.\u001b[39mclose_figures:\n\u001b[0;32m    124\u001b[0m     \u001b[38;5;66;03m# ignore the tracking, just draw and close all figures\u001b[39;00m\n\u001b[0;32m    125\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 126\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mshow\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[0;32m    127\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[0;32m    128\u001b[0m         \u001b[38;5;66;03m# safely show traceback if in IPython, else raise\u001b[39;00m\n\u001b[0;32m    129\u001b[0m         ip \u001b[38;5;241m=\u001b[39m get_ipython()\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib_inline\\backend_inline.py:90\u001b[0m, in \u001b[0;36mshow\u001b[1;34m(close, block)\u001b[0m\n\u001b[0;32m     88\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m     89\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m figure_manager \u001b[38;5;129;01min\u001b[39;00m Gcf\u001b[38;5;241m.\u001b[39mget_all_fig_managers():\n\u001b[1;32m---> 90\u001b[0m         \u001b[43mdisplay\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m     91\u001b[0m \u001b[43m            \u001b[49m\u001b[43mfigure_manager\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcanvas\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfigure\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m     92\u001b[0m \u001b[43m            \u001b[49m\u001b[43mmetadata\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m_fetch_figure_metadata\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfigure_manager\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcanvas\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfigure\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     93\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     94\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[0;32m     95\u001b[0m     show\u001b[38;5;241m.\u001b[39m_to_draw \u001b[38;5;241m=\u001b[39m []\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\display_functions.py:298\u001b[0m, in \u001b[0;36mdisplay\u001b[1;34m(include, exclude, metadata, transient, display_id, raw, clear, *objs, **kwargs)\u001b[0m\n\u001b[0;32m    296\u001b[0m     publish_display_data(data\u001b[38;5;241m=\u001b[39mobj, metadata\u001b[38;5;241m=\u001b[39mmetadata, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    297\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 298\u001b[0m     format_dict, md_dict \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mformat\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minclude\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minclude\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mexclude\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mexclude\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    299\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m format_dict:\n\u001b[0;32m    300\u001b[0m         \u001b[38;5;66;03m# nothing to display (e.g. _ipython_display_ took over)\u001b[39;00m\n\u001b[0;32m    301\u001b[0m         \u001b[38;5;28;01mcontinue\u001b[39;00m\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\formatters.py:179\u001b[0m, in \u001b[0;36mDisplayFormatter.format\u001b[1;34m(self, obj, include, exclude)\u001b[0m\n\u001b[0;32m    177\u001b[0m md \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m    178\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 179\u001b[0m     data \u001b[38;5;241m=\u001b[39m \u001b[43mformatter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    180\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m:\n\u001b[0;32m    181\u001b[0m     \u001b[38;5;66;03m# FIXME: log the exception\u001b[39;00m\n\u001b[0;32m    182\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\decorator.py:232\u001b[0m, in \u001b[0;36mdecorate.<locals>.fun\u001b[1;34m(*args, **kw)\u001b[0m\n\u001b[0;32m    230\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m kwsyntax:\n\u001b[0;32m    231\u001b[0m     args, kw \u001b[38;5;241m=\u001b[39m fix(args, kw, sig)\n\u001b[1;32m--> 232\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mcaller\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfunc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mextras\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkw\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\formatters.py:223\u001b[0m, in \u001b[0;36mcatch_format_error\u001b[1;34m(method, self, *args, **kwargs)\u001b[0m\n\u001b[0;32m    221\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\"show traceback on failed format call\"\"\"\u001b[39;00m\n\u001b[0;32m    222\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 223\u001b[0m     r \u001b[38;5;241m=\u001b[39m \u001b[43mmethod\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    224\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mNotImplementedError\u001b[39;00m:\n\u001b[0;32m    225\u001b[0m     \u001b[38;5;66;03m# don't warn on NotImplementedErrors\u001b[39;00m\n\u001b[0;32m    226\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_return(\u001b[38;5;28;01mNone\u001b[39;00m, args[\u001b[38;5;241m0\u001b[39m])\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\formatters.py:340\u001b[0m, in \u001b[0;36mBaseFormatter.__call__\u001b[1;34m(self, obj)\u001b[0m\n\u001b[0;32m    338\u001b[0m     \u001b[38;5;28;01mpass\u001b[39;00m\n\u001b[0;32m    339\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 340\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mprinter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    341\u001b[0m \u001b[38;5;66;03m# Finally look for special method names\u001b[39;00m\n\u001b[0;32m    342\u001b[0m method \u001b[38;5;241m=\u001b[39m get_real_method(obj, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mprint_method)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\IPython\\core\\pylabtools.py:152\u001b[0m, in \u001b[0;36mprint_figure\u001b[1;34m(fig, fmt, bbox_inches, base64, **kwargs)\u001b[0m\n\u001b[0;32m    149\u001b[0m     \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mmatplotlib\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mbackend_bases\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m FigureCanvasBase\n\u001b[0;32m    150\u001b[0m     FigureCanvasBase(fig)\n\u001b[1;32m--> 152\u001b[0m \u001b[43mfig\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcanvas\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mprint_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbytes_io\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkw\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    153\u001b[0m data \u001b[38;5;241m=\u001b[39m bytes_io\u001b[38;5;241m.\u001b[39mgetvalue()\n\u001b[0;32m    154\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m fmt \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124msvg\u001b[39m\u001b[38;5;124m'\u001b[39m:\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\backend_bases.py:2164\u001b[0m, in \u001b[0;36mFigureCanvasBase.print_figure\u001b[1;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)\u001b[0m\n\u001b[0;32m   2161\u001b[0m     \u001b[38;5;66;03m# we do this instead of `self.figure.draw_without_rendering`\u001b[39;00m\n\u001b[0;32m   2162\u001b[0m     \u001b[38;5;66;03m# so that we can inject the orientation\u001b[39;00m\n\u001b[0;32m   2163\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(renderer, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m_draw_disabled\u001b[39m\u001b[38;5;124m\"\u001b[39m, nullcontext)():\n\u001b[1;32m-> 2164\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfigure\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   2165\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m bbox_inches:\n\u001b[0;32m   2166\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m bbox_inches \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtight\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\artist.py:95\u001b[0m, in \u001b[0;36m_finalize_rasterization.<locals>.draw_wrapper\u001b[1;34m(artist, renderer, *args, **kwargs)\u001b[0m\n\u001b[0;32m     93\u001b[0m \u001b[38;5;129m@wraps\u001b[39m(draw)\n\u001b[0;32m     94\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdraw_wrapper\u001b[39m(artist, renderer, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m---> 95\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     96\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m renderer\u001b[38;5;241m.\u001b[39m_rasterizing:\n\u001b[0;32m     97\u001b[0m         renderer\u001b[38;5;241m.\u001b[39mstop_rasterizing()\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\artist.py:72\u001b[0m, in \u001b[0;36mallow_rasterization.<locals>.draw_wrapper\u001b[1;34m(artist, renderer)\u001b[0m\n\u001b[0;32m     69\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m artist\u001b[38;5;241m.\u001b[39mget_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m     70\u001b[0m         renderer\u001b[38;5;241m.\u001b[39mstart_filter()\n\u001b[1;32m---> 72\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     73\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[0;32m     74\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m artist\u001b[38;5;241m.\u001b[39mget_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\figure.py:3154\u001b[0m, in \u001b[0;36mFigure.draw\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m   3151\u001b[0m         \u001b[38;5;66;03m# ValueError can occur when resizing a window.\u001b[39;00m\n\u001b[0;32m   3153\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mpatch\u001b[38;5;241m.\u001b[39mdraw(renderer)\n\u001b[1;32m-> 3154\u001b[0m \u001b[43mmimage\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_draw_list_compositing_images\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m   3155\u001b[0m \u001b[43m    \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43martists\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msuppressComposite\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3157\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m sfig \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msubfigs:\n\u001b[0;32m   3158\u001b[0m     sfig\u001b[38;5;241m.\u001b[39mdraw(renderer)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\image.py:132\u001b[0m, in \u001b[0;36m_draw_list_compositing_images\u001b[1;34m(renderer, parent, artists, suppress_composite)\u001b[0m\n\u001b[0;32m    130\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m not_composite \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m has_images:\n\u001b[0;32m    131\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m a \u001b[38;5;129;01min\u001b[39;00m artists:\n\u001b[1;32m--> 132\u001b[0m         \u001b[43ma\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    133\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    134\u001b[0m     \u001b[38;5;66;03m# Composite any adjacent images together\u001b[39;00m\n\u001b[0;32m    135\u001b[0m     image_group \u001b[38;5;241m=\u001b[39m []\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\artist.py:72\u001b[0m, in \u001b[0;36mallow_rasterization.<locals>.draw_wrapper\u001b[1;34m(artist, renderer)\u001b[0m\n\u001b[0;32m     69\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m artist\u001b[38;5;241m.\u001b[39mget_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m     70\u001b[0m         renderer\u001b[38;5;241m.\u001b[39mstart_filter()\n\u001b[1;32m---> 72\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     73\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[0;32m     74\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m artist\u001b[38;5;241m.\u001b[39mget_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\axes\\_base.py:3070\u001b[0m, in \u001b[0;36m_AxesBase.draw\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m   3067\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m artists_rasterized:\n\u001b[0;32m   3068\u001b[0m     _draw_rasterized(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfigure, artists_rasterized, renderer)\n\u001b[1;32m-> 3070\u001b[0m \u001b[43mmimage\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_draw_list_compositing_images\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m   3071\u001b[0m \u001b[43m    \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43martists\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfigure\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msuppressComposite\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3073\u001b[0m renderer\u001b[38;5;241m.\u001b[39mclose_group(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124maxes\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m   3074\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstale \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\image.py:132\u001b[0m, in \u001b[0;36m_draw_list_compositing_images\u001b[1;34m(renderer, parent, artists, suppress_composite)\u001b[0m\n\u001b[0;32m    130\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m not_composite \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m has_images:\n\u001b[0;32m    131\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m a \u001b[38;5;129;01min\u001b[39;00m artists:\n\u001b[1;32m--> 132\u001b[0m         \u001b[43ma\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    133\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    134\u001b[0m     \u001b[38;5;66;03m# Composite any adjacent images together\u001b[39;00m\n\u001b[0;32m    135\u001b[0m     image_group \u001b[38;5;241m=\u001b[39m []\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\artist.py:72\u001b[0m, in \u001b[0;36mallow_rasterization.<locals>.draw_wrapper\u001b[1;34m(artist, renderer)\u001b[0m\n\u001b[0;32m     69\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m artist\u001b[38;5;241m.\u001b[39mget_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m     70\u001b[0m         renderer\u001b[38;5;241m.\u001b[39mstart_filter()\n\u001b[1;32m---> 72\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     73\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[0;32m     74\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m artist\u001b[38;5;241m.\u001b[39mget_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\axis.py:1394\u001b[0m, in \u001b[0;36mAxis.draw\u001b[1;34m(self, renderer, *args, **kwargs)\u001b[0m\n\u001b[0;32m   1391\u001b[0m     tick\u001b[38;5;241m.\u001b[39mdraw(renderer)\n\u001b[0;32m   1393\u001b[0m \u001b[38;5;66;03m# Shift label away from axes to avoid overlapping ticklabels.\u001b[39;00m\n\u001b[1;32m-> 1394\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_update_label_position\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1395\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlabel\u001b[38;5;241m.\u001b[39mdraw(renderer)\n\u001b[0;32m   1397\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_offset_text_position(tlb1, tlb2)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\axis.py:2368\u001b[0m, in \u001b[0;36mXAxis._update_label_position\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m   2364\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m\n\u001b[0;32m   2366\u001b[0m \u001b[38;5;66;03m# get bounding boxes for this axis and any siblings\u001b[39;00m\n\u001b[0;32m   2367\u001b[0m \u001b[38;5;66;03m# that have been set by `fig.align_xlabels()`\u001b[39;00m\n\u001b[1;32m-> 2368\u001b[0m bboxes, bboxes2 \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_get_tick_boxes_siblings\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   2370\u001b[0m x, y \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlabel\u001b[38;5;241m.\u001b[39mget_position()\n\u001b[0;32m   2371\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlabel_position \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbottom\u001b[39m\u001b[38;5;124m'\u001b[39m:\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\axis.py:2161\u001b[0m, in \u001b[0;36mAxis._get_tick_boxes_siblings\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m   2159\u001b[0m axis \u001b[38;5;241m=\u001b[39m ax\u001b[38;5;241m.\u001b[39m_axis_map[name]\n\u001b[0;32m   2160\u001b[0m ticks_to_draw \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39m_update_ticks()\n\u001b[1;32m-> 2161\u001b[0m tlb, tlb2 \u001b[38;5;241m=\u001b[39m \u001b[43maxis\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_get_ticklabel_bboxes\u001b[49m\u001b[43m(\u001b[49m\u001b[43mticks_to_draw\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   2162\u001b[0m bboxes\u001b[38;5;241m.\u001b[39mextend(tlb)\n\u001b[0;32m   2163\u001b[0m bboxes2\u001b[38;5;241m.\u001b[39mextend(tlb2)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\axis.py:1315\u001b[0m, in \u001b[0;36mAxis._get_ticklabel_bboxes\u001b[1;34m(self, ticks, renderer)\u001b[0m\n\u001b[0;32m   1313\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m renderer \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1314\u001b[0m     renderer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfigure\u001b[38;5;241m.\u001b[39m_get_renderer()\n\u001b[1;32m-> 1315\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m (\u001b[43m[\u001b[49m\u001b[43mtick\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlabel1\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_window_extent\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1316\u001b[0m \u001b[43m         \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mtick\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mticks\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mtick\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlabel1\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_visible\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m]\u001b[49m,\n\u001b[0;32m   1317\u001b[0m         [tick\u001b[38;5;241m.\u001b[39mlabel2\u001b[38;5;241m.\u001b[39mget_window_extent(renderer)\n\u001b[0;32m   1318\u001b[0m          \u001b[38;5;28;01mfor\u001b[39;00m tick \u001b[38;5;129;01min\u001b[39;00m ticks \u001b[38;5;28;01mif\u001b[39;00m tick\u001b[38;5;241m.\u001b[39mlabel2\u001b[38;5;241m.\u001b[39mget_visible()])\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\axis.py:1315\u001b[0m, in \u001b[0;36m<listcomp>\u001b[1;34m(.0)\u001b[0m\n\u001b[0;32m   1313\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m renderer \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1314\u001b[0m     renderer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfigure\u001b[38;5;241m.\u001b[39m_get_renderer()\n\u001b[1;32m-> 1315\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m ([\u001b[43mtick\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlabel1\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_window_extent\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1316\u001b[0m          \u001b[38;5;28;01mfor\u001b[39;00m tick \u001b[38;5;129;01min\u001b[39;00m ticks \u001b[38;5;28;01mif\u001b[39;00m tick\u001b[38;5;241m.\u001b[39mlabel1\u001b[38;5;241m.\u001b[39mget_visible()],\n\u001b[0;32m   1317\u001b[0m         [tick\u001b[38;5;241m.\u001b[39mlabel2\u001b[38;5;241m.\u001b[39mget_window_extent(renderer)\n\u001b[0;32m   1318\u001b[0m          \u001b[38;5;28;01mfor\u001b[39;00m tick \u001b[38;5;129;01min\u001b[39;00m ticks \u001b[38;5;28;01mif\u001b[39;00m tick\u001b[38;5;241m.\u001b[39mlabel2\u001b[38;5;241m.\u001b[39mget_visible()])\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\text.py:958\u001b[0m, in \u001b[0;36mText.get_window_extent\u001b[1;34m(self, renderer, dpi)\u001b[0m\n\u001b[0;32m    956\u001b[0m bbox, info, descent \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_layout(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_renderer)\n\u001b[0;32m    957\u001b[0m x, y \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mget_unitless_position()\n\u001b[1;32m--> 958\u001b[0m x, y \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_transform\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtransform\u001b[49m\u001b[43m(\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    959\u001b[0m bbox \u001b[38;5;241m=\u001b[39m bbox\u001b[38;5;241m.\u001b[39mtranslated(x, y)\n\u001b[0;32m    960\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m bbox\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\transforms.py:1495\u001b[0m, in \u001b[0;36mTransform.transform\u001b[1;34m(self, values)\u001b[0m\n\u001b[0;32m   1492\u001b[0m values \u001b[38;5;241m=\u001b[39m values\u001b[38;5;241m.\u001b[39mreshape((\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39minput_dims))\n\u001b[0;32m   1494\u001b[0m \u001b[38;5;66;03m# Transform the values\u001b[39;00m\n\u001b[1;32m-> 1495\u001b[0m res \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtransform_affine\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtransform_non_affine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1497\u001b[0m \u001b[38;5;66;03m# Convert the result back to the shape of the input values.\u001b[39;00m\n\u001b[0;32m   1498\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m ndim \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m0\u001b[39m:\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\_api\\deprecation.py:297\u001b[0m, in \u001b[0;36mrename_parameter.<locals>.wrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    292\u001b[0m     warn_deprecated(\n\u001b[0;32m    293\u001b[0m         since, message\u001b[38;5;241m=\u001b[39m\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mold\u001b[38;5;132;01m!r}\u001b[39;00m\u001b[38;5;124m parameter of \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfunc\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m() \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    294\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas been renamed \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mnew\u001b[38;5;132;01m!r}\u001b[39;00m\u001b[38;5;124m since Matplotlib \u001b[39m\u001b[38;5;132;01m{\u001b[39;00msince\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m; support \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    295\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfor the old name will be dropped %(removal)s.\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    296\u001b[0m     kwargs[new] \u001b[38;5;241m=\u001b[39m kwargs\u001b[38;5;241m.\u001b[39mpop(old)\n\u001b[1;32m--> 297\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\transforms.py:2409\u001b[0m, in \u001b[0;36mCompositeGenericTransform.transform_affine\u001b[1;34m(self, values)\u001b[0m\n\u001b[0;32m   2406\u001b[0m \u001b[38;5;129m@_api\u001b[39m\u001b[38;5;241m.\u001b[39mrename_parameter(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m3.8\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpoints\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mvalues\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m   2407\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mtransform_affine\u001b[39m(\u001b[38;5;28mself\u001b[39m, values):\n\u001b[0;32m   2408\u001b[0m     \u001b[38;5;66;03m# docstring inherited\u001b[39;00m\n\u001b[1;32m-> 2409\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_affine\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39mtransform(values)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\transforms.py:2436\u001b[0m, in \u001b[0;36mCompositeGenericTransform.get_affine\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m   2434\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_b\u001b[38;5;241m.\u001b[39mget_affine()\n\u001b[0;32m   2435\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 2436\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mAffine2D\u001b[49m\u001b[43m(\u001b[49m\u001b[43mnp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdot\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_b\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_affine\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_matrix\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   2437\u001b[0m \u001b[43m                           \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_a\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_affine\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_matrix\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\transforms.py:1903\u001b[0m, in \u001b[0;36mAffine2D.__init__\u001b[1;34m(self, matrix, **kwargs)\u001b[0m\n\u001b[0;32m   1900\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m matrix \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1901\u001b[0m     \u001b[38;5;66;03m# A bit faster than np.identity(3).\u001b[39;00m\n\u001b[0;32m   1902\u001b[0m     matrix \u001b[38;5;241m=\u001b[39m IdentityTransform\u001b[38;5;241m.\u001b[39m_mtx\n\u001b[1;32m-> 1903\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_mtx \u001b[38;5;241m=\u001b[39m matrix\u001b[38;5;241m.\u001b[39mcopy()\n\u001b[0;32m   1904\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_invalid \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "t_val = t_val[1:]\n",
    "y_val = y_val[1:]\n",
    "print(t_val)\n",
    "plt.plot(t_val, y_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2757d46-663c-4931-ac97-ea654739caf1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
